@startuml
!define table(x) class x << (T,#FFAAAA) >>
!define primary_key(x) <u><font size="14" color="blue">x</font></u>
!define foreign_key(x) <font size="12" color="Green">x</font>
!define link(t1,c1,t2,c2) t1 c1 -- c2 t2
!define linkTo(t1,c1,t2) t1 c1 --> t2
!define multi_columns(x) <font size="12" color="Red">x</font>

hide methods
hide stereotypes

table(LOCATION_DESCRIPTION) {
primary_key(LOCATION_CODE: Integer)
LOCATION_DESC: String
}

table(CLAIM_RECORD) {
RECORD_ID: String
foreign_key(CLAIM_GID: String)
foreign_key(PATIENT_GID: String)
SRVC_FROM_DTE: Timestamp[ddMMMyyyy]
SRVC_TO_DTE: Timestamp[ddMMMyyyy]
foreign_key(LOCATION_CODE: String)
foreign_key(SRVC_UNT_NBR: Integer)
ADJ_SRVC_UNIT_NBR: Double
SRVC_LINE_SEQ: Integer
PAYER_TYPE: String
COMPLETION_FLAG: String
DUP_FLAG: String
SRVC_CHRG_AMT: Double
foreign_key(PRCDR_CDE: String)
PRCDR_DTE: Timestamp[ddMMMyyyy]
foreign_key(DRUG_ID: String)
}

table(DRUG_DESCRIPTION) {
primary_key(DRUG_ID: String)
foreign_key(NDC11: String)
DRUG_NAME: String
foreign_key(BGI: String)
foreign_key(BB_USC_CODE: String)
BB_USC_NAME: String
DRUG_GENERIC_NAME: String
DRUG_STRENGTH: String
DRUG_FORM: String
PACKAGE_SIZE: Double
PACKAGE_DESCRIPTION: String
MANUFACTURER: String
NDC_START_DATE: Timestamp[ddMMMyyyy]
}

table(PATIENT_ACTIVITY) {
foreign_key(PATIENT_GID: String)
ACTIVITY_TYPE: String
foreign_key(PLAN_ID: String)
ACTIVITY_YEAR: Integer
ACTIVITY_QUARTER: Integer
}

table(PATIENT_DEMOGRAPHIC) {
primary_key(PATIENT_GID: String)
PATIENT_HIPAA_BIRTH_YEAR: Integer
PATIENT_GENDER: String
foreign_key(PTNT_ZIP3: String)
PTNT_STATE: String
}

table(PROC_DESCRIPTION) {
primary_key(PRCDR_CDE: String)
PRCDR_DESC: String
PRCDR_DRUG_NAME: String
}


table(CLAIM_RX) {
foreign_key(CLAIM_GID: String)
foreign_key(PATIENT_GID: String)
foreign_key(DRUG_ID: String)
foreign_key(PHYSICIAN_KEY: String)
PHARMACY_FLAG: String
foreign_key(PLAN_ID: String)
foreign_key(GROUP_NBR: String)
PATIENT_PAY: Double
PLAN_PAY: Double
foreign_key(SECONDARY_PLAN_ID: String)
foreign_key(SECONDARY_GROUP_NBR: String)
SECONDARY_PLAN_PAY: Double
PATIENT_OOP: Double
foreign_key(REFILL_CODE: Integer)
QUANTITY: Double
DAYS_SUPPLY: Integer
RX_FILL_DTE: Timestamp[ddMMMyyyy]
SEQUENCE_NUMBER: String
CLAIM_STATUS: Integer
foreign_key(REJECT_CODE: String)
REVERSAL_LAG: Double
foreign_key(RX_NUMBER: String)
DAYS_TILL_NEXT_FILL: Integer
COPAY_30: Double
SOURCE_OF_BUSINESS: String
NEW_TO_PRODUCT: Integer
CONCOMITANT_FLAG: Integer
PTD_FINAL_CLAIM: Integer
foreign_key(DAW_CDE: Integer)
REFILL_ATHRZ: Integer
}

table(CLAIM_MDFR) {
RECORD_ID: String
foreign_key(CLAIM_GID: String)
SRVC_LINE_SEQ: String
foreign_key(PATIENT_GID: String)
foreign_key(PRCDR_MDFR_1_CDE: String)
foreign_key(PRCDR_MDFR_2_CDE: String)
foreign_key(PRCDR_MDFR_3_CDE: String)
foreign_key(PRCDR_MDFR_4_CDE: String)
PRCDR_DTE: String
COMPLETION_FLAG: String
}

table(PLAN_DESCRIPTION) {
primary_key(PLAN_ID: String)
PLAN_NAME: String
PLAN_TYPE: String
PLAN_SUBTYPE: String
PAYMENT_TYPE: String
REGIONAL_NAME: String
ORGANIZATION_NAME: String
ORGANIZATION_TYPE: String
ADMIN_NAME: String
ADMIN_TYPE: String
foreign_key(MCO_PAYER_ID: String)
}


link(LOCATION_DESCRIPTION,"LOCATION_CODE",CLAIM_RECORD,"LOCATION_CODE")

linkTo(CLAIM_RX, "CLAIM_GID", CLAIM_RECORD )


linkTo(PATIENT_ACTIVITY, "PLAN_ID", PLAN_DESCRIPTION)

linkTo(CLAIM_RX, "DRUG_ID", DRUG_DESCRIPTION)
linkTo(CLAIM_RECORD, "DRUG_ID", DRUG_DESCRIPTION)


linkTo(CLAIM_RX, "PATIENT_GID", PATIENT_DEMOGRAPHIC)
linkTo(CLAIM_MDFR, "PATIENT_GID", PATIENT_DEMOGRAPHIC)
linkTo(CLAIM_RECORD, "PATIENT_GID", PATIENT_DEMOGRAPHIC)
linkTo(PATIENT_ACTIVITY, "PATIENT_GID", PATIENT_DEMOGRAPHIC)

linkTo(CLAIM_RECORD, "PRCDR_CDE", PROC_DESCRIPTION)

@enduml

